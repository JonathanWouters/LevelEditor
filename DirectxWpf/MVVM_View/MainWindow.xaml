<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:DaeSharpWpf="clr-namespace:DaeSharpWpf;assembly=DaeSharpWpf" 
        x:Class="DirectxWpf.MVVM_View.MainWindow"
        xmlns:Model="clr-namespace:DirectxWpf.MVVM_Model"
        xmlns:VM="clr-namespace:DirectxWpf.MVVM_ViewModel"
        xmlns:wi="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:b="clr-namespace:DirectxWpf.Behavior"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Level Editor" Height="720" Width="1280" 
        DataContext="{Binding Source={StaticResource mainViewModel}}" 
    BorderThickness="0" 
    BorderBrush="#FF7A7A7A">
    <Window.Resources>
        <DataTemplate x:Key="ModelTemplate">
            <TextBlock Text="{Binding Name}"/>
        </DataTemplate>
        <DataTemplate x:Key="ItemTemplate">
            <TextBlock Text="{Binding Title}"/>
        </DataTemplate>
    </Window.Resources>
    <Grid Name="MainGrid" Background="#FF505050">
        <Grid.RowDefinitions>
            <RowDefinition Height="24"/>
            <RowDefinition Height="486*"/>
            <RowDefinition Height="180*" MaxHeight="200"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.ColumnSpan="3">
            <Menu Margin="0" DockPanel.Dock="Top" Padding="10,0" Background="#FF4B4B4B" BorderThickness="0,0,0,1" BorderBrush="#FF323232" Foreground="#FFE0E0E0">
                <MenuItem Header="_File" Height="24" Width="40" BorderThickness="0" BorderBrush="#FF2E2E2E" Foreground="#FFDADADA" Background="#FF4B4B4B" >
                    <MenuItem Header="_Open Project" Background="#FF444444" Command="{Binding OpenProjectCommand}"/>
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Load" Background="#FF444444" Command="{Binding LoadXmlCommand}"/>
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Save" Background="#FF444444" Command="{Binding SaveXmlCommand}"/>
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Close Map" Background="#FF444444" Command="{Binding CloseMapCommand}"/>
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Close Project" Background="#FF444444" Command="{Binding CloseProjectCommand}"/>
                </MenuItem>
                <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_GameObject" Height="24" Width="80" BorderThickness="0" BorderBrush="#FF2E2E2E" Foreground="#FFDADADA" Background="#FF4B4B4B" >
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Add empty" Background="#FF444444" Command="{Binding AddEmptyCommand}"/>
                    <MenuItem IsEnabled="{Binding IsProjectLoaded}" Header="_Save as prefab" Background="#FF444444" Command="{Binding SavePrefabCommand}" CommandParameter="{Binding GoManager.SelectedObject}"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <Border Grid.Row="1" Grid.Column="1"  Grid.RowSpan="1" VerticalAlignment="Top" Margin="0,5,0,0" Padding="0,2" BorderBrush="#FF707070" Height="32" BorderThickness="1" Background="#FF444444" >
            <Grid Name="ViewportMenuGrid">
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Height="26"  Margin="2,0" Command="{Binding UndoCommand}" Background="#FF636363" BorderBrush="#FF9E9E9E" Foreground="Gainsboro" ToolTip="Undo">
                        <Button.Content>
                            <Image Source="/DirectxWpf;component/Resources/Icons/UndoIcon.png" />
                        </Button.Content>
                    </Button>
                    <Button Height="26" Margin="2,0" Command="{Binding RedoCommand}"  Background="#FF636363" BorderBrush="#FF9E9E9E" Foreground="Gainsboro">
                        <Button.Content>
                            <Image Source="/DirectxWpf;component/Resources/Icons/RedoIcon.png" ToolTip="Redo" />
                        </Button.Content>
                    </Button>
                </StackPanel>
                
                <StackPanel  Orientation="Horizontal" Margin="0,0,0,0" FlowDirection="RightToLeft" Grid.Column="1" HorizontalAlignment="Right">
                    <RadioButton Name="rbRotate" Tag="Rotate" Width="26" Margin="2,0" Cursor="Hand" ToolTip="Rotate" Background="#FF636363" BorderBrush="#FF9E9E9E">
                        <RadioButton.Template>
                            <ControlTemplate>
                                <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Background="#FF636363" BorderBrush="#FF9E9E9E"
                                              Command="{Binding SetGizmoCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=. }"/>
                            </ControlTemplate>
                        </RadioButton.Template>
                        <RadioButton.Content>
                            <Image Source="/DirectxWpf;component/Resources/Icons/RotateIcon.png" OpacityMask="#FF636363"/>
                        </RadioButton.Content>
                    </RadioButton>

                    <RadioButton Name="rbScale" Tag="Scale" Width="26" Margin="2,0" Cursor="Hand" ToolTip="Scale" Background="#FF636363" BorderBrush="#FF9E9E9E">
                        <RadioButton.Template>
                            <ControlTemplate>
                                <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Background="#FF636363" BorderBrush="#FF9E9E9E"
                                              Command="{Binding SetGizmoCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=. }"/>
                            </ControlTemplate>
                        </RadioButton.Template>
                        <RadioButton.Content>
                            <Image Source="/DirectxWpf;component/Resources/Icons/ScaleIcon.png" OpacityMask="#FF636363"/>
                        </RadioButton.Content>
                    </RadioButton>

                    <RadioButton Name="rbTranslate" Tag="Translate" Width="26" Margin="2,0,4,0" Cursor="Hand" ToolTip="Translate" Background="#FF636363" BorderBrush="#FF9E9E9E">
                        <RadioButton.Template>
                            <ControlTemplate>
                                <ToggleButton IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Background="#FF636363" BorderBrush="#FF9E9E9E"
                                              Command="{Binding SetGizmoCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=. }"/>
                            </ControlTemplate>
                        </RadioButton.Template>
                        <RadioButton.Content>
                            <Image Source="/DirectxWpf;component/Resources/Icons/MoveIcon.png" OpacityMask="#FF636363"/>
                        </RadioButton.Content>
                    </RadioButton>
                    <Border BorderThickness="1,0,0,0" BorderBrush="#FFE8E8E8">
                    <StackPanel Orientation="Horizontal" Grid.Column="3" FlowDirection="LeftToRight" Margin="2,0">
                        <Button Width="26"  Margin="2,0" Command="{Binding OpenSnapWindowCommand}" Background="#FF636363" BorderBrush="#FF9E9E9E">
                            <Button.Content>
                                <Image Source="/DirectxWpf;component/Resources/Icons/SnapIcon.png" OpacityMask="#FF636363"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                    </Border>
                </StackPanel>

            </Grid>
        </Border>

        <Border BorderBrush="#FF707070" BorderThickness="1,0,1,1" Grid.Column="1" Margin="0,36,0,0" Grid.Row="1">
            <DaeSharpWpf:DX10RenderCanvas Focusable="True" Viewport="{Binding Viewport10 }" x:Name="dX10RenderCanvas"  Stretch="Fill" MouseDown="dX10RenderCanvas_MouseDown" GotKeyboardFocus="dX10RenderCanvas_GotKeyboardFocus" Grid.Column="1" Margin="0" >
                <wi:Interaction.Triggers>
                    <wi:EventTrigger EventName="GotFocus">
                        <cmd:EventToCommand Command="{Binding ViewportGotFocusCommand}" />
                    </wi:EventTrigger>
                    <wi:EventTrigger EventName="GotKeyboardFocus">
                        <cmd:EventToCommand Command="{Binding ViewportGotFocusCommand}" />
                    </wi:EventTrigger>
                    <wi:EventTrigger EventName="LostKeyboardFocus">
                        <cmd:EventToCommand Command="{Binding ViewportLostFocusCommand}" />
                    </wi:EventTrigger>
                    <wi:EventTrigger EventName="LostFocus">
                        <cmd:EventToCommand Command="{Binding ViewportLostFocusCommand}" />
                    </wi:EventTrigger>
                </wi:Interaction.Triggers>
            </DaeSharpWpf:DX10RenderCanvas>
        </Border>
        <Border BorderBrush="#FF343434" BorderThickness="1" Grid.Column="2" Margin="5" Grid.RowSpan="2" Background="#FF444444" Grid.Row="1">
            <StackPanel Grid.Column="2" Orientation="Vertical" Margin="0,5">
                <TextBox Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Name, Mode=TwoWay}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6" Grid.Column="2" FontSize="14"/>

                <Label Content="Position" Grid.Column="2" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Foreground="Gainsboro" Height="26" Width="55"/>
                <Grid Name="PositionGrid" Margin="0" VerticalAlignment="Top" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Position.X, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="1" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Position.Y, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="2" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Position.Z, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                </Grid>
                <Label Content="Rotation" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Foreground="Gainsboro" Height="26" Width="55"/>
                <Grid Name="RotationGrid" Margin="0" VerticalAlignment="Top" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.RotationEuler.X, Mode=TwoWay, StringFormat=N0}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="1" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.RotationEuler.Y, Mode=TwoWay, StringFormat=N0}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="2" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.RotationEuler.Z, Mode=TwoWay, StringFormat=N0}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                </Grid>
                <Label Content="Scale" Grid.Column="2" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Foreground="Gainsboro" Height="26" Width="37"/>
                <Grid Name="ScaleGrid" Margin="0" VerticalAlignment="Top" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Scale.X, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="1" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Scale.Y, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                    <TextBox Grid.Column="2" Height="22" Margin="5,0" TextWrapping="Wrap" Text="{Binding GoManager.SelectedObject.Transform.Scale.Z, Mode=TwoWay, StringFormat=N2}" VerticalAlignment="Top" Background="#FF505050" BorderBrush="#FF343434" Foreground="Gainsboro" SelectionBrush="#FFA6A6A6"/>
                </Grid>
            </StackPanel>
        </Border>
        
        <DockPanel Grid.Column="1" Margin="0,5" Grid.Row="2">
            <Grid DockPanel.Dock="Top" Height="32"   Background="#FF323232" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <Label Height="23" Margin="10,0" Content="Filters"  Foreground="Gainsboro"/>
                    <ComboBox SelectedIndex="{Binding LBFilesViewModel.SelectedFilterIndex}" Height="23" Width="100" HorizontalAlignment="Left" Background="#FF505050" BorderBrush="#FF343434" Foreground="Black" >
                        <ComboBoxItem Content="Models" HorizontalAlignment="Left" Width="98" Foreground="#FF272727" Background="#FFF0F0F0"/>
                        <ComboBoxItem Content="Collision Meshes" HorizontalAlignment="Left" Width="98" Foreground="#FF272727" Background="#FFF0F0F0"/>
                        <ComboBoxItem Content="Maps" HorizontalAlignment="Left" Width="98" Foreground="#FF272727" Background="#FFF0F0F0"/>
                        <ComboBoxItem Content="All" HorizontalAlignment="Left" Width="98" Foreground="#FF272727" Background="#FFF0F0F0"/>
                    </ComboBox>
                    <TextBox Text="{Binding LBFilesViewModel.Filter}" Margin="10,0" Height="23" Width="100" Background="#FF505050" BorderBrush="#FF232323" Foreground="Gainsboro" SelectionBrush="#FFB8B8B8"/>
                </StackPanel>
                

            </Grid>
            <ListView DockPanel.Dock="Bottom" ItemsSource="{Binding LBFilesViewModel.FilesList}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Column="1" Grid.Row="2" Background="#FF444444" BorderBrush="#FF343434" Foreground="Gainsboro" >
                <ListView.ItemsPanel >
                    <ItemsPanelTemplate >
                        <WrapPanel  Orientation="Horizontal"  />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="5">
                            <Border Height="80" Width="80" BorderBrush="#FF343434" BorderThickness="1" CornerRadius="2" Background="#FF404040">
                                <Label  Content="{Binding NoDotExtension}" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Impact" FontSize="20" Foreground="#FFD4D4D4" BorderBrush="#FF0A0A0A" />
                            </Border>
                            <TextBlock Height="16" Width="80" Text="{Binding FileName}"/>
                            <StackPanel.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding RelativeSource={RelativeSource AncestorType=Window},
                                                    Path=DataContext.ItemDoubleClickCommand}"
                                    CommandParameter="{Binding .}" />

                            </StackPanel.InputBindings>
                        </StackPanel>
                    </DataTemplate>

                </ListView.ItemTemplate>


            </ListView>
        </DockPanel>

        <TreeView x:Name="TrvDirectories" ItemsSource="{Binding TRVDirectoriesViewModel.Root.Items }" Margin="5" Grid.Row="2" Background="#FF444444" BorderBrush="#FF343434" Foreground="#FF636363">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type Model:TreeNode}" ItemsSource="{Binding Items}">
                    <TextBlock Text="{Binding Title}" Foreground="Gainsboro" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <wi:Interaction.Triggers>
                <wi:EventTrigger EventName="SelectedItemChanged">
                    <cmd:EventToCommand Command="{Binding LBFilesViewModel.ChangeDirectoryCommand}" CommandParameter="{Binding ElementName=TrvDirectories, Path=SelectedItem}" />
                </wi:EventTrigger>
            </wi:Interaction.Triggers>
        </TreeView>

        <TreeView x:Name="TrvObjectList" ItemsSource="{Binding GoTreeViewModel.Root}" AllowDrop="True"  Margin="5,5,5,0" Grid.Row="1" Background="#FF444444" BorderBrush="#FF343434" Foreground="#FF636363">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type VM:TRVGameObjectElementViewModel}" ItemsSource="{Binding Children}">
                    <StackPanel>
                    <TextBlock Text="{Binding GameObject.Name}" Foreground="Gainsboro" />
                    <wi:Interaction.Behaviors>
                        <b:FrameworkElementDragBehavior/>
                        <b:FrameworkElementDropBehavior/>
                    </wi:Interaction.Behaviors>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="IsSelected" Value="{Binding GameObject.IsSelected}"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <wi:Interaction.Triggers>
                <wi:EventTrigger EventName="SelectedItemChanged">
                    <cmd:EventToCommand Command="{Binding GoTreeViewModel.ChangeSelecedObjectCommand}" PassEventArgsToCommand="True"/>
                </wi:EventTrigger>
            </wi:Interaction.Triggers>
        </TreeView>

    </Grid>
</Window>
